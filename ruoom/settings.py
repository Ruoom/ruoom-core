"""
Django settings for ruoom project.

Generated by 'django-admin startproject' using Django 2.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os
from django.urls import reverse_lazy
from pathlib import Path
from decouple import config

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'GENERATE_YOUR_OWN_SECRET'

# SECURITY WARNING: don't run with debug turned on in production!
import sys
if os.environ.get('RDS_HOSTNAME', 'localhost') == 'localhost':
    DEBUG = True
elif len(sys.argv) > 2:
    if "0.0.0.0" in sys.argv[2]:
        DEBUG = True
        
ALLOWED_HOSTS = ['*']

# Application definition

DJANGO_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_extensions',
    'debug_toolbar',
    'rest_framework',
    'taggit',
]
THIRD_PARTY_APPS = [
    'bootstrap4',
    'phonenumber_field',
    'corsheaders',
    'sslserver',
    'preventconcurrentlogins',
]
LOCAL_APPS = [
    'administration.apps.AdminConfig',
    'registration.apps.RegConfig',
    'customer.apps.CustomerConfig',
    'plugins.payment',
    'plugins.digitalproducts',
]

# https://docs.djangoproject.com/en/dev/ref/settings/#installed-apps
INSTALLED_APPS = LOCAL_APPS + DJANGO_APPS + THIRD_PARTY_APPS

MIDDLEWARE = [
    'registration.middleware.authentication.CookieSameSiteMiddlerTest',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'administration.middleware.language.LocaleMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'debug_toolbar.middleware.DebugToolbarMiddleware',
    'registration.middleware.authentication.AuthenticationMiddleware',
    'preventconcurrentlogins.middleware.PreventConcurrentLoginsMiddleware'
]

ROOT_URLCONF = 'ruoom.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'administration.context_processors.studio_image',
                'administration.context_processors.language_list'
            ],
            'debug': True,
        },
    },
]

WSGI_APPLICATION = 'ruoom.wsgi.application'

CORS_ORIGIN_ALLOW_ALL = True

# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

# live db details
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.environ.get('RDS_DB_NAME', 'Ruoom'),
        'USER': os.environ.get('RDS_USERNAME', 'ruoom_admin'),
        'PASSWORD': os.environ.get('RDS_PASSWORD', 'password'), 
        'HOST': os.environ.get('RDS_HOSTNAME', 'localhost'),
        'PORT': os.environ.get('RDS_PORT', '5432'),
    }
}

# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
]

SILENCED_SYSTEM_CHECKS = [
    'auth.W004',
    'auth.E003',
]

# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LOCALE_PATHS = ( os.path.join(BASE_DIR, 'locale'), )

LANGUAGE_CODE = 'en'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

#USE_TZ = True

TIME_INPUT_FORMATS = ('%I:%M %p',"%H:%M")

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/


STATIC_ROOT = os.path.join(BASE_DIR, "static_cache")
MEDIA_ROOT = os.path.join(BASE_DIR, "media")
STATIC_URL = "/static/"
MEDIA_URL = "/media/"

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
]

# Static and media storage option
STORAGE = os.environ.get("STORAGE", "")

# set this to True to enable per page permission authentication
ENABLE_PER_PAGE_PERMISSIONS = True
FORCE_SUPERUSER_CREATION = True

# URL where to redirect if there is no superuser in database.
ADMIN_URL1 = '/admin/'
ADMIN_URL2 = '/admin/login/'
SIGNUP_URL = reverse_lazy('registration:signup')
LOGIN_URL = reverse_lazy('registration:signin')
CUSTOMER_LOGIN_URL = reverse_lazy('registration:customer_signin')
LOGIN_REDIRECT_URL = reverse_lazy('administration:dashboard')
CUSTOMER_LOGIN_REDIRECT_URL = reverse_lazy('customer:customer-account-settings')
LOCAL_URLS = ['http://localhost', 'http://127.0.0.1']
SAFE_DOMAINS = []

COUNTRY_LANGUAGES = {
    "us": "en",
    "kr": "ko"
}

# These names are in correspondence with their associated view names. for each view requested, user will have to be member of that view group
CHECKIN_GROUP = 'checkin'
STORE_GROUP = 'store'
CUSTOMERS_GROUP = 'customers'
STAFF_GROUP = 'staff'
SCHEDULE_GROUP = 'schedule'
LOCATIONS_GROUP = 'locations'
PURCHASES_GROUP = 'purchases'
ADMIN_GROUP = 'admin'
CUSTOMER_GROUP = 'customer'
ADMIN_SUBSCRIPTIONS = 'subscription_admin'

RESTRICTED_PATH_GROUPS = [
    CHECKIN_GROUP,
    STORE_GROUP,
    CUSTOMERS_GROUP,
    STAFF_GROUP,
    SCHEDULE_GROUP,
    LOCATIONS_GROUP,
    PURCHASES_GROUP,
    CUSTOMER_GROUP,
]
DEFAULT_PATH_GROUPS = [
    CUSTOMER_GROUP,
    STAFF_GROUP
]
SUPERUSER_ONLY_PATH_GROUPS =  [
    ADMIN_GROUP
]

# This is necessary for django-debug-toolbar
# ---------------------------------------------------------------------
DEBUG_TOOLBAR_CONFIG = {
    'SHOW_TOOLBAR_CALLBACK': lambda r: False,  # disables it
}

INTERNAL_IPS = [
    '127.0.0.1',
]

DEFAULT_AUTO_FIELD = 'django.db.models.AutoField'

SECRET_FILE_NAME =  "secret.key"

FIRST_TIME_PASS = "rl9HYY*ou0R4sWh&w3D6E#5*oC#" #To be reset immediately upon first sign in. platform cannot be used with this password

SESSION_COOKIE_SECURE = True
CSRF_COOKIE_SECURE = True

# Plugin settings
ENABLE_PLUGINS = True
PLUGINS_DIR = os.path.join(BASE_DIR, 'plugins')

#Automated email sender can be defined here or in database
EMAIL_HOST = None
EMAIL_PORT = None
EMAIL_HOST_USER = None
EMAIL_HOST_PASSWORD = None
EMAIL_USE_TLS = None
